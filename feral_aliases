#!/bin/bash

###
# Variables for commonly needed info
###

#
# All variables must start with FERAL_ to avoid issues with potentially existing variables.
#

# the /dev/ of the user's drive -- might not map to ${HOME} directly
export FERAL_DRIVE=$(df -h ~ | grep -v grep | grep dev | awk '{print $1}')
# i.e. ext4 or zfs
export FERAL_FSTYPE=$(df -T ${FERAL_DRIVE} | awk '{print $2}' | grep -v Type)
# Avoiding magic URLS
export FERAL_ALIASES_URL="https://git.io/vsuVp"
# Array of strings separated by :. The first part is the friendly name of the app, the second is the directory to look for to see if it is installed
# This is for stuff staff traditionally supports
FERAL_CORE_APPS=(
	"plex:${HOME}/private/plex"
	"mysql:${HOME}/private/mysql"
	"deluge:${HOME}/private/deluge"
	"rtorrent:${HOME}/private/rtorrent"
	"transmission:${HOME}/private/transmission"
	"nginx:${HOME}/.nginx"
	"openvpn:${HOME}/private/vpn"
	)

# No staff support -- most of the time
FERAL_EXTRA_APPS=(
	"Feral_Aliases:${HOME}/.feral_aliases"
	)

###
# Functions
###

#
# All functions must start with FERAL_ to avoid issues with potentially existing variables.
#

function feral_iostat(){
	if [[ ! "${FERAL_FSTYPE}" == "ext4" ]]; then
		echo "Sorry, this command only works on ext4 drives."
	else	
		echo "Hit control-c to cancel this when you are done reviewing"
		echo "This tool measures how busy your hard drive is, as a percent of how busy it can be."
		echo "Seeing '100' frequently is a sign (but not proof) of a problem."
		iostat -x 5 -d ${FERAL_DRIVE} | awk '{print $14}'
	fi
}

function feral_aliases_update(){
	wget -qO ~/.feral_aliases "${FERAL_ALIASES_URL}"
	if [[ "$?" -eq 0 ]]; then
		echo "Fetch successful..."
		. ~/.feral_aliases
	fi
}

function feral_aliases_install () {
	if [[ -e "${HOME}/.bashrc" ]]; then
		if [[ $(grep "FERAL_ALIASES" -c ~/.bashrc) -eq "0" ]]; then
			echo "Adding these aliases to ~/.bashrc..."
			echo "### Do not modify this block by hand ###" 						>> ~/.bashrc
			echo "# import FERAL_ALIASES by default for all new shells" >> ~/.bashrc
			echo "if [[ -e "~/.feral_aliases" ]]; then" 								>> ~/.bashrc
			echo "	. ~/.feral_aliases" 																>> ~/.bashrc
			echo "fi" 																									>> ~/.bashrc
			echo "###/Do not modify this block by hand ###" 						>> ~/.bashrc
		fi
		if [[ $(grep "FERAL_ALIASES" -c ~/.bashrc) -gt "0" ]]; then
			echo "Feral aliases added this to ~/.bashrc!"
		fi
	else
		echo "Your ~/.bashrc appears to be missing... unable to install"
	fi
}

function feral_usage(){
	echo "The feral_aliases package adds the following commands (possibly more than is listed here:"
	echo "    feral_iostats: 					This helps check the disk IO on your slot"
	echo "    feral_aliases:					This updates all the feral_aliases"
	echo "    feral_aliases_install:	This installs these commands for all future SSH sessions"
	echo "    feral_aliases_remove:		This removes these commands from the running shell (does not modify ~/.bashrc)"
	echo "    feral_list_installed:   This lists installed feral software -- accepts 'extra' argument"
	echo "    feral_paste:            This accepts in put on standard in, and uploads it to a pastebin for sharing"
}

function feral_aliases_remove(){
	for FUNCTION in $(declare -F | grep 'feral_' | sed 's|declare -f ||g'); do
		unset -f "${FUNCTION}"
	done
	echo "All feral aliases removed from running shell"
}

function feral_list_installed(){
	if [[ "${1}" == "extras" ]]; then
		FERAL_APPS="${FERAL_EXTRA_APPS[@]}"
		printf "%s\n" "These applications are community supported:"
	else
		FERAL_APPS="${FERAL_CORE_APPS[@]}"
		printf "%s\n" "These applications are community and officially supported:"
	fi
	for FERAL_APP in ${FERAL_APPS[@]}; do
		FERAL_APP_NAME="$(echo ${FERAL_APP} | cut -d: -f1)"
		FERAL_APP_LOCATION="$(echo ${FERAL_APP} | cut -d: -f2)"
		if [[ -e "${FERAL_APP_LOCATION}" ]]; then
			printf '%15s %14s \n' "${FERAL_APP_NAME}:" "Installed"
			if [[ "${FERAL_APP_NAME}" == "nginx" ]]; then
				# Nginx/Apache are mutually exclusive
				printf '%15s %14s \n' "Apache:" "Not Installed"
			fi
		else
			printf '%15s %14s \n' "${FERAL_APP_NAME}:" "Not Installed"
			if [[ "${FERAL_APP_NAME}" == "nginx" ]]; then
				# Nginx/Apache are mutually exclusive
				printf '%15s %14s \n' "Apache" "Installed"
			fi
		fi
	done
	unset FERAL_APP_NAME FERAL_APP_LOCATION
}

###
# Aliases
###

#
# All aliases must start with FERAL_ to avoid issues with potentially existing variables.
#

alias feral_paste="nc termbin.com 9999"

###
# Exit
###
echo "Successfully loaded all commands"

